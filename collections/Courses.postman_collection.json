{
	"info": {
		"_postman_id": "978ed82a-5f78-4178-8426-128e0c366a6b",
		"name": "Courses",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29613235"
	},
	"item": [
		{
			"name": "Flow and getting neccessary variables",
			"item": [
				{
					"name": "Получить id контент- менеджера",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set('content_manager_id', pm.response.json().values[0].id);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "auth.unionetest.ru"
							},
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
							},
							{
								"key": "content-type",
								"value": "text/plain;charset=UTF-8"
							},
							{
								"key": "origin",
								"value": "https://oneid.unionetest.ru"
							},
							{
								"key": "referer",
								"value": "https://oneid.unionetest.ru/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Not.A/Brand\";v=\"8\", \"Chromium\";v=\"114\", \"Google Chrome\";v=\"114\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"{{content_manager_token}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://auth.unionetest.ru/api/v1/getuserdata",
							"protocol": "https",
							"host": [
								"auth",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v1",
								"getuserdata"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получить id юзер- орга",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set('organisator_id', pm.response.json().values[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "auth.unionetest.ru"
							},
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
							},
							{
								"key": "content-type",
								"value": "text/plain;charset=UTF-8"
							},
							{
								"key": "origin",
								"value": "https://oneid.unionetest.ru"
							},
							{
								"key": "referer",
								"value": "https://oneid.unionetest.ru/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Not.A/Brand\";v=\"8\", \"Chromium\";v=\"114\", \"Google Chrome\";v=\"114\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"{{organisator_token}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://auth.unionetest.ru/api/v1/getuserdata",
							"protocol": "https",
							"host": [
								"auth",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v1",
								"getuserdata"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получить id тестируемого",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set('tester_id', pm.response.json().values[0].id);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "auth.unionetest.ru"
							},
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
							},
							{
								"key": "content-type",
								"value": "text/plain;charset=UTF-8"
							},
							{
								"key": "origin",
								"value": "https://oneid.unionetest.ru"
							},
							{
								"key": "referer",
								"value": "https://oneid.unionetest.ru/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Not.A/Brand\";v=\"8\", \"Chromium\";v=\"114\", \"Google Chrome\";v=\"114\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"{{tester_token}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://auth.unionetest.ru/api/v1/getuserdata",
							"protocol": "https",
							"host": [
								"auth",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v1",
								"getuserdata"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание организации",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set('organisation_id', pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{content_manager_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"address\": \"gidropony1905@gmail.com\",\r\n  \"name\": \"Postman_test\",\r\n  \"desc\": \"Used for autotest, this should be deleted by now probably\",\r\n  \"email\": \"gidropony1905@gmail.com\",\r\n  \"phone\": \"9625568900\",\r\n  \"models\": [\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/organization",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"organization"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавить юзер-орга в организацию",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "api-buildernext-assmnt.unionetest.ru"
							},
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
							},
							{
								"key": "authorization",
								"value": "2196ce7e26cd03570e4c0171fc1479d49a01878bf679164ad204c5884f584412"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "origin",
								"value": "https://assessment.unionetest.ru"
							},
							{
								"key": "referer",
								"value": "https://assessment.unionetest.ru/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Not.A/Brand\";v=\"8\", \"Chromium\";v=\"114\", \"Google Chrome\";v=\"114\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"idOrg\": \"{{organisation_id}}\",\r\n    \"idUser\": \"{{organisator_id}}\"\r\n}"
						},
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/organizations/user",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"organizations",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание модели курса (по компетенциям)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set('model_id', pm.response.json()._id);\r",
									"pm.collectionVariables.set('model', JSON.stringify(pm.response.json()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "api-models-assmnt.unionetest.ru"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
							},
							{
								"key": "authorization",
								"value": "{{content_manager_token}}"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "origin",
								"value": "https://models-assessment.unionetest.ru"
							},
							{
								"key": "referer",
								"value": "https://models-assessment.unionetest.ru/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Chromium\";v=\"112\", \"Google Chrome\";v=\"112\", \"Not:A-Brand\";v=\"99\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"stage\": \"draft\",\r\n    \"display_results\": \"competency_only\",\r\n    \"stages\": [\r\n        {\r\n            \"name\": \"Postman_test\",\r\n            \"color\": \"#E26C3C\",\r\n            \"order\": 1\r\n        }\r\n    ],\r\n    \"common_params\": {\r\n        \"name\": \"Postman_test\",\r\n        \"level\": \"normal_level\",\r\n        \"count_of_attempts\": 2,\r\n        \"registration_type\": \"link\",\r\n        \"max_count_of_testers\": 10000,\r\n        \"certificates\": false\r\n    },\r\n    \"fields_display\": {\r\n        \"show_it\": false,\r\n        \"show_docs\": false,\r\n        \"show_description\": false,\r\n        \"show_academic_hours\": true,\r\n        \"show_academic_months\": true,\r\n        \"show_branch_industry\": false\r\n    },\r\n    \"test_options\": {\r\n        \"weight_questions\": [\r\n            {\r\n                \"type\": \"one\",\r\n                \"tag\": \"competency_level\",\r\n                \"count\": 1,\r\n                \"weight\": 1,\r\n                \"is_enabled\": true,\r\n                \"time_for_question\": 10\r\n            }\r\n        ],\r\n        \"weight_levels\": [\r\n            {\r\n                \"level\": \"normal_level\",\r\n                \"weight\": 1\r\n            },\r\n            {\r\n                \"level\": \"advanced_level\",\r\n                \"weight\": 2\r\n            },\r\n            {\r\n                \"level\": \"expert_level\",\r\n                \"weight\": 3\r\n            }\r\n        ],\r\n        \"output\": \"by_one\",\r\n        \"test_type\": \"competency\"\r\n    },\r\n    \"levels\": [\r\n        {\r\n            \"type\": \"basic_level\",\r\n            \"from\": 0,\r\n            \"to\": 17\r\n        },\r\n        {\r\n            \"type\": \"normal_level\",\r\n            \"from\": 18,\r\n            \"to\": 100\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api-models-assmnt.unionetest.ru/api/models/v2",
							"protocol": "https",
							"host": [
								"api-models-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"models",
								"v2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание модели курса (по сферам)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set('model_id_sphere', pm.response.json()._id);\r",
									"pm.collectionVariables.set('model_sphere', JSON.stringify(pm.response.json()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "api-models-assmnt.unionetest.ru",
								"disabled": true
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7",
								"disabled": true
							},
							{
								"key": "authorization",
								"value": "{{content_manager_token}}"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "origin",
								"value": "https://models-assessment.unionetest.ru",
								"disabled": true
							},
							{
								"key": "referer",
								"value": "https://models-assessment.unionetest.ru/",
								"disabled": true
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Chromium\";v=\"116\", \"Not)A;Brand\";v=\"24\", \"Google Chrome\";v=\"116\"",
								"disabled": true
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0",
								"disabled": true
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\"",
								"disabled": true
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty",
								"disabled": true
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors",
								"disabled": true
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site",
								"disabled": true
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"stage\": \"draft\",\r\n    \"display_results\": \"sphere_only\",\r\n    \"stages\": [\r\n        {\r\n            \"name\": \"Postman_test\",\r\n            \"color\": \"#CAD753\",\r\n            \"order\": 1\r\n        }\r\n    ],\r\n    \"common_params\": {\r\n        \"name\": \"Postman_test\",\r\n        \"level\": \"advanced_level\",\r\n        \"count_of_attempts\": 2,\r\n        \"registration_type\": \"link\",\r\n        \"max_count_of_testers\": 10000,\r\n        \"certificates\": true\r\n    },\r\n    \"fields_display\": {\r\n        \"show_it\": false,\r\n        \"show_docs\": false,\r\n        \"show_description\": false,\r\n        \"show_academic_hours\": false,\r\n        \"show_academic_months\": false,\r\n        \"show_branch_industry\": false\r\n    },\r\n    \"test_options\": {\r\n        \"weight_questions\": [\r\n            {\r\n                \"type\": \"one\",\r\n                \"tag\": \"sphere\",\r\n                \"count\": 2,\r\n                \"weight\": 1,\r\n                \"is_enabled\": true,\r\n                \"time_for_question\": 2\r\n            },\r\n            {\r\n                \"type\": \"case\",\r\n                \"tag\": \"sphere\",\r\n                \"count\": 2,\r\n                \"weight\": 2,\r\n                \"is_enabled\": true,\r\n                \"time_for_question\": 2\r\n            },\r\n            {\r\n                \"type\": \"plural\",\r\n                \"tag\": \"sphere\",\r\n                \"count\": 2,\r\n                \"weight\": 1,\r\n                \"is_enabled\": true,\r\n                \"time_for_question\": 10\r\n            },\r\n            {\r\n                \"type\": \"matrix\",\r\n                \"tag\": \"sphere\",\r\n                \"count\": 2,\r\n                \"weight\": 2,\r\n                \"is_enabled\": true,\r\n                \"time_for_question\": 2\r\n            },\r\n            {\r\n                \"type\": \"tree\",\r\n                \"tag\": \"sphere\",\r\n                \"count\": 2,\r\n                \"weight\": 2,\r\n                \"is_enabled\": true,\r\n                \"time_for_question\": 2\r\n            }\r\n        ],\r\n        \"weight_levels\": [\r\n            {\r\n                \"level\": \"normal_level\",\r\n                \"weight\": 1\r\n            },\r\n            {\r\n                \"level\": \"advanced_level\",\r\n                \"weight\": 2\r\n            },\r\n            {\r\n                \"level\": \"expert_level\",\r\n                \"weight\": 3\r\n            }\r\n        ],\r\n        \"output\": \"by_one\",\r\n        \"test_type\": \"sphere\"\r\n    },\r\n    \"levels\": [\r\n        {\r\n            \"type\": \"basic_level\",\r\n            \"from\": 0,\r\n            \"to\": 17\r\n        },\r\n        {\r\n            \"type\": \"normal_level\",\r\n            \"from\": 18,\r\n            \"to\": 43\r\n        },\r\n        {\r\n            \"type\": \"advanced_level\",\r\n            \"from\": 44,\r\n            \"to\": 100\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api-models-assmnt.unionetest.ru/api/models/v2",
							"protocol": "https",
							"host": [
								"api-models-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"models",
								"v2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Публикация модели курса (по компетенциям)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authority",
								"value": "api-models-assmnt.unionetest.ru"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
							},
							{
								"key": "authorization",
								"value": "{{content_manager_token}}"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "origin",
								"value": "https://models-assessment.unionetest.ru"
							},
							{
								"key": "referer",
								"value": "https://models-assessment.unionetest.ru/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Chromium\";v=\"112\", \"Google Chrome\";v=\"112\", \"Not:A-Brand\";v=\"99\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{model}}"
						},
						"url": {
							"raw": "https://api-models-assmnt.unionetest.ru/api/models/publish-by-id?id={{model_id}}",
							"protocol": "https",
							"host": [
								"api-models-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"models",
								"publish-by-id"
							],
							"query": [
								{
									"key": "id",
									"value": "{{model_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Публикация модели курса (по сферам)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let thisRequest = {\r",
									"    url: `https://api-models-assmnt.unionetest.ru/api/models/publish-by-id?id=${pm.collectionVariables.get('model_id_sphere')}`,\r",
									"    method: 'PUT',\r",
									"    header: {\r",
									"    'accept': 'application/json',\r",
									"    'Authorization': `${pm.collectionVariables.get('content_manager_token')}`\r",
									"    },\r",
									"    body: pm.collectionVariables.get('model_sphere')\r",
									"};\r",
									"pm.sendRequest(thisRequest, (error, response) => {\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authority",
								"value": "api-models-assmnt.unionetest.ru"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
							},
							{
								"key": "authorization",
								"value": "{{content_manager_token}}"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "origin",
								"value": "https://models-assessment.unionetest.ru"
							},
							{
								"key": "referer",
								"value": "https://models-assessment.unionetest.ru/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Chromium\";v=\"112\", \"Google Chrome\";v=\"112\", \"Not:A-Brand\";v=\"99\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{model_sphere}}"
						},
						"url": {
							"raw": "https://api-models-assmnt.unionetest.ru/api/models/publish-by-id?id={{model_id_sphere}}",
							"protocol": "https",
							"host": [
								"api-models-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"models",
								"publish-by-id"
							],
							"query": [
								{
									"key": "id",
									"value": "{{model_id_sphere}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление модели курса в организацию",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Adding competency model to organisation\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "authority",
								"value": "api-buildernext-assmnt.unionetest.ru"
							},
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
							},
							{
								"key": "authorization",
								"value": "{{content_manager_token}}"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "origin",
								"value": "https://assessment.unionetest.ru"
							},
							{
								"key": "referer",
								"value": "https://assessment.unionetest.ru/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Not.A/Brand\";v=\"8\", \"Chromium\";v=\"114\", \"Google Chrome\";v=\"114\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"models\": [\r\n        {\r\n            \"_id\": \"{{model_id}}\",\r\n            \"name\": \"Postman Test\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/organizations/{{organisation_id}}",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"organizations",
								"{{organisation_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление модели курса (по сферам) в организацию",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Adding sphere model to organisation\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "authority",
								"value": "api-buildernext-assmnt.unionetest.ru"
							},
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
							},
							{
								"key": "authorization",
								"value": "{{content_manager_token}}"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "origin",
								"value": "https://assessment.unionetest.ru"
							},
							{
								"key": "referer",
								"value": "https://assessment.unionetest.ru/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Not.A/Brand\";v=\"8\", \"Chromium\";v=\"114\", \"Google Chrome\";v=\"114\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"models\": [\r\n        {\r\n            \"_id\": \"{{model_id_sphere}}\",\r\n            \"name\": \"Postman Test\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/organizations/{{organisation_id}}",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"organizations",
								"{{organisation_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание блока компетенций",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set('competency_block_id', pm.response.json()._id);\r",
									"pm.collectionVariables.set('competency_block', JSON.stringify(pm.response.json()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "api-buildernext-assmnt.unionetest.ru"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
							},
							{
								"key": "authorization",
								"value": "{{content_manager_token}}"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "origin",
								"value": "https://assessment.unionetest.ru"
							},
							{
								"key": "referer",
								"value": "https://assessment.unionetest.ru/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Not.A/Brand\";v=\"8\", \"Chromium\";v=\"114\", \"Google Chrome\";v=\"114\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/competency",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"competency"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получить id составляющих блока компетенций",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set('sphere_id', pm.response.json()[\"spheres\"][0][\"_id\"]);\r",
									"pm.collectionVariables.set('competency_id', pm.response.json()[\"spheres\"][0][\"competencies\"][0][\"_id\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authority",
								"value": "api-buildernext-assmnt.unionetest.ru"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
							},
							{
								"key": "authorization",
								"value": "{{content_manager_token}}"
							},
							{
								"key": "origin",
								"value": "https://assessment.unionetest.ru"
							},
							{
								"key": "referer",
								"value": "https://assessment.unionetest.ru/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Not.A/Brand\";v=\"8\", \"Chromium\";v=\"114\", \"Google Chrome\";v=\"114\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36"
							}
						],
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/competency/{{competency_block_id}}",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"competency",
								"{{competency_block_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Переименовать блок компетенций",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authority",
								"value": "api-buildernext-assmnt.unionetest.ru"
							},
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
							},
							{
								"key": "authorization",
								"value": "{{content_manager_token}}"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "origin",
								"value": "https://assessment.unionetest.ru"
							},
							{
								"key": "referer",
								"value": "https://assessment.unionetest.ru/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Not.A/Brand\";v=\"8\", \"Chromium\";v=\"114\", \"Google Chrome\";v=\"114\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"title\":\"Postman_test\"}"
						},
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/block/update/{{competency_block_id}}",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"block",
								"update",
								"{{competency_block_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создать курс",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set('course_id', pm.response.json()._id);\r",
									"pm.collectionVariables.set('course_stage_id', pm.response.json().stages[0]._id);\r",
									"pm.test(\"creating courses for spheres\", () => {\r",
									"    let thisRequest = {\r",
									"    url: `https://api-buildernext-assmnt.unionetest.ru/api/v3/course`,\r",
									"    method: 'POST',\r",
									"    header: {\r",
									"    'accept': 'application/json',\r",
									"    'Authorization': `${pm.collectionVariables.get('content_manager_token')}`\r",
									"    },\r",
									"    body: {\r",
									"        \"title\": \"Postman_test\",\r",
									"        \"academic\": {\r",
									"            \"hours\": 1,\r",
									"            \"month\": 1\r",
									"        },\r",
									"        \"model_id\": `${pm.collectionVariables.get('model_id_spheres')}`,\r",
									"        \"testing\": [\r",
									"            {\r",
									"                \"_id\": `${pm.collectionVariables.get('competency_id')}`,\r",
									"                \"level\": \"normal_level\"\r",
									"            }\r",
									"        ],\r",
									"        \"stages\": [\r",
									"            {\r",
									"                \"order\": 1,\r",
									"                \"start_date\": `${pm.collectionVariables.get('today')}`,\r",
									"                \"end_date\":  `${pm.collectionVariables.get('tomorrow')}`,\r",
									"                \"is_procto\": false,\r",
									"                \"timezone\": 3\r",
									"            }\r",
									"        ],\r",
									"        \"stage\": \"draft\",\r",
									"        \"author_id\": `${pm.collectionVariables.get('organisator_id')}`,\r",
									"        \"organization_id\": `${pm.collectionVariables.get('organisation_id')}`\r",
									"    }\r",
									"};\r",
									"pm.sendRequest(thisRequest, (error, response) => {\r",
									"});\r",
									"});\r",
									"pm.test(\"creating courses for publishing\", () => {\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.collectionVariables.set('course_1_id', response.json()._id);\r",
									"    });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.collectionVariables.set('course_2_id', response.json()._id);\r",
									"    });\r",
									"});\r",
									"pm.test(\"creating courses for moderate deleting\", () => {\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.collectionVariables.set('course_3_id', response.json().id);\r",
									"    });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.collectionVariables.set('course_4_id', response.json().id);\r",
									"    });\r",
									"});\r",
									"pm.test(\"creating courses for deleting\", () => {\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.collectionVariables.set('course_5_id', response.json().id);\r",
									"    });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.collectionVariables.set('course_6_id', response.json().id);\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "api-buildernext-assmnt.unionetest.ru"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9"
							},
							{
								"key": "authorization",
								"value": "{{organisator_token}}"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "origin",
								"value": "https://assessment.unionetest.ru"
							},
							{
								"key": "referer",
								"value": "https://assessment.unionetest.ru/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Not.A/Brand\";v=\"8\", \"Chromium\";v=\"114\", \"Google Chrome\";v=\"114\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Postman_test\",\r\n    \"academic\": {\r\n        \"hours\": 1,\r\n        \"month\": 1\r\n    },\r\n    \"model_id\": \"{{model_id}}\",\r\n    \"testing\": [\r\n        {\r\n            \"_id\": \"{{competency_id}}\",\r\n            \"level\": \"normal_level\"\r\n        }\r\n    ],\r\n    \"stages\": [\r\n        {\r\n            \"order\": 1,\r\n            \"start_date\": \"{{today}}\",\r\n            \"end_date\": \"{{tomorrow}}\",\r\n            \"is_procto\": false,\r\n            \"timezone\": 3\r\n        }\r\n    ],\r\n    \"stage\": \"draft\",\r\n    \"author_id\": \"{{organisator_id}}\",\r\n    \"organization_id\": \"{{organisation_id}}\"\r\n}"
						},
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/course",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"course"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание курса по сферам в статусе \"Черновик\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set('course_id_sphere', pm.response.json()._id);\r",
									"pm.collectionVariables.set('course_stage_id_sphere', pm.response.json().stages[0]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{organisator_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Postman_test_sphere\",\r\n    \"desc\": \"<p>Postman_test</p>\",\r\n    \"academic\": {\r\n        \"hours\": 1,\r\n        \"month\": 1\r\n    },\r\n    \"model_id\": \"{{model_id_sphere}}\",\r\n    \"testing\": [\r\n        {\r\n            \"_id\": \"{{sphere_id}}\",\r\n            \"level\": \"normal_level\",\r\n            \"tags\": []\r\n        }\r\n    ],\r\n    \"is_it\": false,\r\n    \"stages\": [\r\n        {\r\n            \"order\": 1,\r\n            \"start_date\": \"{{today}}\",\r\n            \"end_date\": \"{{tomorrow}}\",\r\n            \"is_procto\": false,\r\n            \"timezone\": 3\r\n        }\r\n    ],\r\n    \"stage\": \"draft\",\r\n    \"author_id\": \"{{organisator_id}}\",\r\n    \"organization_id\": \"{{organisation_id}}\"\r\n}"
						},
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/course",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"course"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"let today = require('moment');",
							"let tomorrow = today().add(1, 'days')",
							"pm.collectionVariables.set('today', today());",
							"pm.collectionVariables.set('tomorrow', tomorrow);"
						]
					}
				}
			]
		},
		{
			"name": "Courses",
			"item": [
				{
					"name": "Создание курса по компетенциям в статусе \"Черновик\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Permission test for organisator\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									" \r",
									"pm.test(\"Permission test for content-manager\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('content_manager_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for content-manager failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for tester\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('tester_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for tester failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"required\": [\r",
									"        \"_id\",\r",
									"        \"academic\",\r",
									"        \"author_id\",\r",
									"        \"has_students\",\r",
									"        \"desc\",\r",
									"        \"title\",\r",
									"        \"stage\",\r",
									"        \"dictionary_id\",\r",
									"        \"is_it\",\r",
									"        \"model_id\",\r",
									"        \"stages\",\r",
									"        \"is_deleted\",\r",
									"        \"created_at\",\r",
									"        \"updated_at\",\r",
									"        \"organization_id\",\r",
									"        \"testing\",\r",
									"        \"files\",\r",
									"        \"organization\",\r",
									"        \"competencies\",\r",
									"        \"spheres\"\r",
									"    ],\r",
									"    \"additionalProperties\": false,\r",
									"    \"properties\": {\r",
									"        \"_id\": {\r",
									"            \"type\": \"string\",\r",
									"            },\r",
									"        \"academic\": {\r",
									"            \"type\": \"object\",\r",
									"        },\r",
									"        \"author_id\": {\r",
									"            \"type\": \"string\",\r",
									"        },\r",
									"        \"has_students\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"desc\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"title\":{\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"stage\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"dictionary_id\":{\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"is_it\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"model_id\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"stages\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"is_deleted\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"created_at\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"updated_at\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"organization_id\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"testing\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"files\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"organization\": {\r",
									"            \"type\": \"object\"\r",
									"        },\r",
									"        \"competencies\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"spheres\": {\r",
									"            \"type\": \"array\"\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Schema is valid\", () => {\r",
									"    pm.expect(ajv.validate(schema, jsonData)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500 ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{organisator_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Postman_test\",\r\n    \"academic\": {\r\n        \"hours\": 1,\r\n        \"month\": 1\r\n    },\r\n    \"model_id\": \"{{model_id}}\",\r\n    \"testing\": [\r\n        {\r\n            \"_id\": \"{{competency_id}}\",\r\n            \"level\": \"normal_level\"\r\n        }\r\n    ],\r\n    \"stages\": [\r\n        {\r\n            \"order\": 1,\r\n            \"start_date\": \"{{today}}\",\r\n            \"end_date\": \"{{tomorrow}}\",\r\n            \"is_procto\": false,\r\n            \"timezone\": 3\r\n        }\r\n    ],\r\n    \"stage\": \"draft\",\r\n    \"author_id\": \"{{organisator_id}}\",\r\n    \"organization_id\": \"{{organisation_id}}\"\r\n}"
						},
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/course",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"course"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание курса по сферам в статусе \"Черновик\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Permission test for organisator\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									" \r",
									"pm.test(\"Permission test for content-manager\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('content_manager_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for content-manager failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for tester\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('tester_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for tester failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"required\": [\r",
									"        \"_id\",\r",
									"        \"academic\",\r",
									"        \"author_id\",\r",
									"        \"has_students\",\r",
									"        \"desc\",\r",
									"        \"title\",\r",
									"        \"stage\",\r",
									"        \"dictionary_id\",\r",
									"        \"is_it\",\r",
									"        \"model_id\",\r",
									"        \"stages\",\r",
									"        \"is_deleted\",\r",
									"        \"created_at\",\r",
									"        \"updated_at\",\r",
									"        \"organization_id\",\r",
									"        \"testing\",\r",
									"        \"files\",\r",
									"        \"organization\",\r",
									"        \"competencies\",\r",
									"        \"spheres\"\r",
									"    ],\r",
									"    \"additionalProperties\": false,\r",
									"    \"properties\": {\r",
									"        \"_id\": {\r",
									"            \"type\": \"string\",\r",
									"            },\r",
									"        \"academic\": {\r",
									"            \"type\": \"object\",\r",
									"        },\r",
									"        \"author_id\": {\r",
									"            \"type\": \"string\",\r",
									"        },\r",
									"        \"has_students\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"desc\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"title\":{\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"stage\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"dictionary_id\":{\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"is_it\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"model_id\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"stages\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"is_deleted\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"created_at\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"updated_at\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"organization_id\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"testing\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"files\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"organization\": {\r",
									"            \"type\": \"object\"\r",
									"        },\r",
									"        \"competencies\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"spheres\": {\r",
									"            \"type\": \"array\"\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Schema is valid\", () => {\r",
									"    pm.expect(ajv.validate(schema, jsonData)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500 ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{organisator_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Postman_test_sphere\",\r\n    \"desc\": \"<p>Postman_test</p>\",\r\n    \"academic\": {\r\n        \"hours\": 1,\r\n        \"month\": 1\r\n    },\r\n    \"model_id\": \"{{model_id_sphere}}\",\r\n    \"testing\": [\r\n        {\r\n            \"_id\": \"{{sphere_id}}\",\r\n            \"level\": \"normal_level\",\r\n            \"tags\": []\r\n        }\r\n    ],\r\n    \"is_it\": false,\r\n    \"stages\": [\r\n        {\r\n            \"order\": 1,\r\n            \"start_date\": \"{{today}}\",\r\n            \"end_date\": \"{{tomorrow}}\",\r\n            \"is_procto\": false,\r\n            \"timezone\": 3\r\n        }\r\n    ],\r\n    \"stage\": \"draft\",\r\n    \"author_id\": \"{{organisator_id}}\",\r\n    \"organization_id\": \"{{organisation_id}}\"\r\n}"
						},
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/course",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"course"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение курса по ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Permission test for organisator\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" \r",
									"pm.test(\"Permission test for content-manager\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('content_manager_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for content-manager failed\").to.have.status(200);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for tester\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('tester_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for tester failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"required\": [\r",
									"        \"_id\",\r",
									"        \"academic\",\r",
									"        \"author_id\",\r",
									"        \"has_students\",\r",
									"        \"desc\",\r",
									"        \"title\",\r",
									"        \"stage\",\r",
									"        \"dictionary_id\",\r",
									"        \"is_it\",\r",
									"        \"model_id\",\r",
									"        \"stages\",\r",
									"        \"is_deleted\",\r",
									"        \"created_at\",\r",
									"        \"updated_at\",\r",
									"        \"organization_id\",\r",
									"        \"testing\",\r",
									"        \"files\",\r",
									"        \"organization\",\r",
									"        \"competencies\",\r",
									"        \"spheres\"\r",
									"    ],\r",
									"    \"additionalProperties\": false,\r",
									"    \"properties\": {\r",
									"        \"_id\": {\r",
									"            \"type\": \"string\",\r",
									"            },\r",
									"        \"academic\": {\r",
									"            \"type\": \"object\",\r",
									"        },\r",
									"        \"author_id\": {\r",
									"            \"type\": \"string\",\r",
									"        },\r",
									"        \"has_students\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"desc\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"title\":{\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"stage\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"dictionary_id\":{\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"is_it\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"model_id\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"stages\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"is_deleted\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"created_at\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"updated_at\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"organization_id\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"testing\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"files\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"organization\": {\r",
									"            \"type\": \"object\"\r",
									"        },\r",
									"        \"competencies\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"spheres\": {\r",
									"            \"type\": \"array\"\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Schema is valid\", () => {\r",
									"    pm.expect(ajv.validate(schema, jsonData)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500 ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{organisator_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/course/{{course_id}}",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"course",
								"{{course_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Частичное обновление курса в статусе \"Черновик\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Permission test for organisator\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" \r",
									"pm.test(\"Permission test for content-manager\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('content_manager_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for content-manager failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for tester\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('tester_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for tester failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"required\": [\r",
									"        \"course_id\",\r",
									"        \"updated_fields\"\r",
									"    ],\r",
									"    \"additionalProperties\": false,\r",
									"    \"properties\": {\r",
									"        \"course_id\": {\r",
									"            \"type\": \"string\",\r",
									"            },\r",
									"        \"updated_fields\": {\r",
									"            \"type\": \"string\",\r",
									"            }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Schema is valid\", () => {\r",
									"    pm.expect(ajv.validate(schema, jsonData)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500 ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{organisator_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Postman_test\",\r\n    \"academic\": {\r\n        \"hours\": 1,\r\n        \"month\": 1\r\n    },\r\n    \"model_id\": \"{{model_id}}\",\r\n    \"testing\": [\r\n        {\r\n            \"_id\": \"{{competency_id}}\",\r\n            \"level\": \"normal_level\"\r\n        }\r\n    ],\r\n    \"stages\": [\r\n        {\r\n            \"order\": 1,\r\n            \"start_date\": \"{{today}}\",\r\n            \"end_date\": \"{{tomorrow}}\",\r\n            \"is_procto\": false,\r\n            \"timezone\": 3\r\n        }\r\n    ],\r\n    \"stage\": \"draft\",\r\n    \"author_id\": \"{{organisator_id}}\",\r\n    \"organization_id\": \"{{organisation_id}}\"\r\n}"
						},
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/course/{{course_id}}",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"course",
								"{{course_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Поиск курсов с фильтрацией",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Permission test for organisator\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" \r",
									"pm.test(\"Permission test for content-manager\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('content_manager_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for content-manager failed\").to.have.status(200);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for tester\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('tester_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for tester failed\").to.have.status(200);\r",
									"    });\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"required\": [\r",
									"        \"items\",\r",
									"        \"totalCount\"\r",
									"    ],\r",
									"    \"additionalProperties\": false,\r",
									"    \"properties\": {\r",
									"        \"items\": {\r",
									"            \"type\": \"array\",\r",
									"            },\r",
									"        \"totalCount\": {\r",
									"            \"type\": \"integer\",\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Schema is valid\", () => {\r",
									"    pm.expect(ajv.validate(schema, jsonData)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500 ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "{{organisator_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/courses?organization={{organisation_id}}",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"courses"
							],
							"query": [
								{
									"key": "organization",
									"value": "{{organisation_id}}"
								},
								{
									"key": "stages",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Отправка курса на модерацию",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Permission test for organisator\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" \r",
									"pm.test(\"Permission test for content-manager\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('content_manager_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for content-manager failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for tester\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('tester_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for tester failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"required\": [\r",
									"        \"course_id\"\r",
									"    ],\r",
									"    \"additionalProperties\": false,\r",
									"    \"properties\": {\r",
									"        \"course_id\": {\r",
									"            \"type\": \"string\",\r",
									"            }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Schema is valid\", () => {\r",
									"    pm.expect(ajv.validate(schema, jsonData)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Moderate spehere course\", () => {\r",
									"    let thisRequest = {\r",
									"        url: `https://api-buildernext-assmnt.unionetest.ru/api/v3/course/${pm.collectionVariables.get('course_id_sphere')}/moderate`,\r",
									"        method: 'PATCH',\r",
									"        header: {\r",
									"        'accept': 'application/json',\r",
									"        'Authorization': `${pm.collectionVariables.get('organisator_token')}`\r",
									"        }\r",
									"    };\r",
									"    pm.sendRequest(thisRequest, (error, response) => {\r",
									"        pm.expect(response, \"Model has not been sent to moderation\").to.have.status(200);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500 ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{organisator_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/course/{{course_id}}/moderate",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"course",
								"{{course_id}}",
								"moderate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получения списка курсов на модерацию с фильтрацией Все оценочные сессии",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Permission test for organisator\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" \r",
									"pm.test(\"Permission test for content-manager\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('content_manager_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for content-manager failed\").to.have.status(200);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for tester\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('tester_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for tester failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"required\": [\r",
									"        \"items\",\r",
									"        \"totalCount\"\r",
									"    ],\r",
									"    \"additionalProperties\": false,\r",
									"    \"properties\": {\r",
									"        \"items\": {\r",
									"            \"type\": \"array\",\r",
									"            },\r",
									"        \"totalCount\": {\r",
									"            \"type\": \"integer\",\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Schema is valid\", () => {\r",
									"    pm.expect(ajv.validate(schema, jsonData)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authority",
								"value": "api-buildernext-assmnt.unionetest.ru"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
							},
							{
								"key": "authorization",
								"value": "{{content_manager_token}}"
							},
							{
								"key": "origin",
								"value": "https://moderate-assessment.unionetest.ru"
							},
							{
								"key": "referer",
								"value": "https://moderate-assessment.unionetest.ru/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Chromium\";v=\"116\", \"Not)A;Brand\";v=\"24\", \"Google Chrome\";v=\"116\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36"
							}
						],
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/moderate/courses?organization={{organisation_id}}&limit=10&page=1",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"moderate",
								"courses"
							],
							"query": [
								{
									"key": "organization",
									"value": "{{organisation_id}}"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение списка курсов на модерации c фильтрацией Опубликованные",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Permission test for organisator\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" \r",
									"pm.test(\"Permission test for content-manager\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('content_manager_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for content-manager failed\").to.have.status(200);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for tester\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('tester_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for tester failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"required\": [\r",
									"        \"items\",\r",
									"        \"totalCount\"\r",
									"    ],\r",
									"    \"additionalProperties\": false,\r",
									"    \"properties\": {\r",
									"        \"items\": {\r",
									"            \"type\": \"array\",\r",
									"            },\r",
									"        \"totalCount\": {\r",
									"            \"type\": \"integer\",\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Schema is valid\", () => {\r",
									"    pm.expect(ajv.validate(schema, jsonData)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authority",
								"value": "api-buildernext-assmnt.unionetest.ru"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
							},
							{
								"key": "authorization",
								"value": "{{content_manager_token}}"
							},
							{
								"key": "origin",
								"value": "https://moderate-assessment.unionetest.ru"
							},
							{
								"key": "referer",
								"value": "https://moderate-assessment.unionetest.ru/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Chromium\";v=\"116\", \"Not)A;Brand\";v=\"24\", \"Google Chrome\";v=\"116\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36"
							}
						],
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/moderate/courses?organization={{organisation_id}}&stages=published&limit=10&page=1",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"moderate",
								"courses"
							],
							"query": [
								{
									"key": "organization",
									"value": "{{organisation_id}}"
								},
								{
									"key": "stages",
									"value": "published"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение списка курсов на модерации c фильтрацией На модерации",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Permission test for organisator\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" \r",
									"pm.test(\"Permission test for content-manager\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('content_manager_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for content-manager failed\").to.have.status(200);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for tester\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('tester_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for tester failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"required\": [\r",
									"        \"items\",\r",
									"        \"totalCount\"\r",
									"    ],\r",
									"    \"additionalProperties\": false,\r",
									"    \"properties\": {\r",
									"        \"items\": {\r",
									"            \"type\": \"array\",\r",
									"            },\r",
									"        \"totalCount\": {\r",
									"            \"type\": \"integer\",\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Schema is valid\", () => {\r",
									"    pm.expect(ajv.validate(schema, jsonData)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500 ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "{{content_manager_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/moderate/courses?organization={{organisation_id}}&stages=moderate",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"moderate",
								"courses"
							],
							"query": [
								{
									"key": "organization",
									"value": "{{organisation_id}}"
								},
								{
									"key": "stages",
									"value": "moderate"
								},
								{
									"key": "sort",
									"value": "_id%2C1%3Btitle%2C-1%20%7C%7C%20created_at%2C-1%20%7C%7C%20fieldName%2C1%3BfieldName%2C-1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение списка курсов на модерации c фильтрацией На доработке",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Permission test for organisator\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" \r",
									"pm.test(\"Permission test for content-manager\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('content_manager_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for content-manager failed\").to.have.status(200);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for tester\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('tester_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for tester failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"required\": [\r",
									"        \"items\",\r",
									"        \"totalCount\"\r",
									"    ],\r",
									"    \"additionalProperties\": false,\r",
									"    \"properties\": {\r",
									"        \"items\": {\r",
									"            \"type\": \"array\",\r",
									"            },\r",
									"        \"totalCount\": {\r",
									"            \"type\": \"integer\",\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Schema is valid\", () => {\r",
									"    pm.expect(ajv.validate(schema, jsonData)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500 ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authority",
								"value": "api-buildernext-assmnt.unionetest.ru"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
							},
							{
								"key": "authorization",
								"value": "{{content_manager_token}}"
							},
							{
								"key": "origin",
								"value": "https://moderate-assessment.unionetest.ru"
							},
							{
								"key": "referer",
								"value": "https://moderate-assessment.unionetest.ru/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Chromium\";v=\"116\", \"Not)A;Brand\";v=\"24\", \"Google Chrome\";v=\"116\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36"
							}
						],
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/moderate/courses?organization={{organisator_id}}&stages=need_updates&limit=10&page=1",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"moderate",
								"courses"
							],
							"query": [
								{
									"key": "organization",
									"value": "{{organisator_id}}"
								},
								{
									"key": "stages",
									"value": "need_updates"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение списка курсов на модерации c фильтрацией Архив",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Permission test for organisator\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" \r",
									"pm.test(\"Permission test for content-manager\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('content_manager_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for content-manager failed\").to.have.status(200);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for tester\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('tester_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for tester failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"required\": [\r",
									"        \"items\",\r",
									"        \"totalCount\"\r",
									"    ],\r",
									"    \"additionalProperties\": false,\r",
									"    \"properties\": {\r",
									"        \"items\": {\r",
									"            \"type\": \"array\",\r",
									"            },\r",
									"        \"totalCount\": {\r",
									"            \"type\": \"integer\",\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Schema is valid\", () => {\r",
									"    pm.expect(ajv.validate(schema, jsonData)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500 ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authority",
								"value": "api-buildernext-assmnt.unionetest.ru"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
							},
							{
								"key": "authorization",
								"value": "{{content_manager_token}}"
							},
							{
								"key": "origin",
								"value": "https://moderate-assessment.unionetest.ru"
							},
							{
								"key": "referer",
								"value": "https://moderate-assessment.unionetest.ru/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Chromium\";v=\"116\", \"Not)A;Brand\";v=\"24\", \"Google Chrome\";v=\"116\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36"
							}
						],
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/moderate/courses?organization={{organisator_id}}&stages=archived&limit=10&page=1",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"moderate",
								"courses"
							],
							"query": [
								{
									"key": "organization",
									"value": "{{organisator_id}}"
								},
								{
									"key": "stages",
									"value": "archived"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение курса с модерации по ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Permission test for organisator\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" \r",
									"pm.test(\"Permission test for content-manager\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('content_manager_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for content-manager failed\").to.have.status(200);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for tester\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('tester_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for tester failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"required\": [\r",
									"        \"_id\",\r",
									"        \"academic\",\r",
									"        \"author_id\",\r",
									"        \"has_students\",\r",
									"        \"desc\",\r",
									"        \"title\",\r",
									"        \"stage\",\r",
									"        \"dictionary_id\",\r",
									"        \"is_it\",\r",
									"        \"model_id\",\r",
									"        \"stages\",\r",
									"        \"is_deleted\",\r",
									"        \"created_at\",\r",
									"        \"updated_at\",\r",
									"        \"organization_id\",\r",
									"        \"testing\",\r",
									"        \"files\",\r",
									"        \"organization\",\r",
									"        \"competencies\",\r",
									"        \"spheres\"\r",
									"    ],\r",
									"    \"additionalProperties\": false,\r",
									"    \"properties\": {\r",
									"        \"_id\": {\r",
									"            \"type\": \"string\",\r",
									"            },\r",
									"        \"academic\": {\r",
									"            \"type\": \"object\",\r",
									"        },\r",
									"        \"author_id\": {\r",
									"            \"type\": \"string\",\r",
									"        },\r",
									"        \"has_students\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"desc\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"title\":{\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"stage\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"dictionary_id\":{\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"is_it\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"model_id\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"stages\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"is_deleted\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"created_at\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"updated_at\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"organization_id\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"testing\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"files\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"organization\": {\r",
									"            \"type\": \"object\"\r",
									"        },\r",
									"        \"competencies\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"spheres\": {\r",
									"            \"type\": \"array\"\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Schema is valid\", () => {\r",
									"    pm.expect(ajv.validate(schema, jsonData)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500 ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{content_manager_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/moderate/course/{{course_id}}",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"moderate",
								"course",
								"{{course_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление курса с модерации",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "{{organisator_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/moderate/course/{{course_id}}",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"moderate",
								"course",
								"{{course_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Обновление курса по компетенциям на модерации",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Permission test for organisator\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" \r",
									"pm.test(\"Permission test for content-manager\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('content_manager_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for content-manager failed\").to.have.status(200);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for tester\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('tester_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for tester failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"required\": [\r",
									"        \"_id\",\r",
									"        \"academic\",\r",
									"        \"author_id\",\r",
									"        \"has_students\",\r",
									"        \"desc\",\r",
									"        \"title\",\r",
									"        \"stage\",\r",
									"        \"dictionary_id\",\r",
									"        \"is_it\",\r",
									"        \"model_id\",\r",
									"        \"stages\",\r",
									"        \"is_deleted\",\r",
									"        \"created_at\",\r",
									"        \"updated_at\",\r",
									"        \"organization_id\",\r",
									"        \"testing\",\r",
									"        \"files\",\r",
									"        \"organization\",\r",
									"        \"competencies\",\r",
									"        \"spheres\"\r",
									"    ],\r",
									"    \"additionalProperties\": false,\r",
									"    \"properties\": {\r",
									"        \"_id\": {\r",
									"            \"type\": \"string\",\r",
									"            },\r",
									"        \"academic\": {\r",
									"            \"type\": \"object\",\r",
									"        },\r",
									"        \"author_id\": {\r",
									"            \"type\": \"string\",\r",
									"        },\r",
									"        \"has_students\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"desc\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"title\":{\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"stage\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"dictionary_id\":{\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"is_it\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"model_id\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"stages\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"is_deleted\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"created_at\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"updated_at\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"organization_id\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"testing\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"files\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"organization\": {\r",
									"            \"type\": \"object\"\r",
									"        },\r",
									"        \"competencies\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"spheres\": {\r",
									"            \"type\": \"array\"\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Schema is valid\", () => {\r",
									"    pm.expect(ajv.validate(schema, jsonData)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500 ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{content_manager_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"course_id\": \"{{course_id}}\",\r\n  \"stage\": \"moderate\"\r\n}"
						},
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/moderate/course/update",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"moderate",
								"course",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Обновление курса по сферам на модерации",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Permission test for organisator\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" \r",
									"pm.test(\"Permission test for content-manager\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('content_manager_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for content-manager failed\").to.have.status(200);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for tester\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('tester_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for tester failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"required\": [\r",
									"        \"_id\",\r",
									"        \"academic\",\r",
									"        \"author_id\",\r",
									"        \"has_students\",\r",
									"        \"desc\",\r",
									"        \"title\",\r",
									"        \"stage\",\r",
									"        \"dictionary_id\",\r",
									"        \"is_it\",\r",
									"        \"model_id\",\r",
									"        \"stages\",\r",
									"        \"is_deleted\",\r",
									"        \"created_at\",\r",
									"        \"updated_at\",\r",
									"        \"organization_id\",\r",
									"        \"testing\",\r",
									"        \"files\",\r",
									"        \"organization\",\r",
									"        \"competencies\",\r",
									"        \"spheres\"\r",
									"    ],\r",
									"    \"additionalProperties\": false,\r",
									"    \"properties\": {\r",
									"        \"_id\": {\r",
									"            \"type\": \"string\",\r",
									"            },\r",
									"        \"academic\": {\r",
									"            \"type\": \"object\",\r",
									"        },\r",
									"        \"author_id\": {\r",
									"            \"type\": \"string\",\r",
									"        },\r",
									"        \"has_students\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"desc\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"title\":{\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"stage\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"dictionary_id\":{\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"is_it\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"model_id\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"stages\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"is_deleted\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"created_at\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"updated_at\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"organization_id\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"testing\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"files\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"organization\": {\r",
									"            \"type\": \"object\"\r",
									"        },\r",
									"        \"competencies\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"spheres\": {\r",
									"            \"type\": \"array\"\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Schema is valid\", () => {\r",
									"    pm.expect(ajv.validate(schema, jsonData)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500 ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{content_manager_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"course_id\": \"{{course_id_sphere}}\",\r\n  \"stage\": \"need_updates\"\r\n}"
						},
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/moderate/course/update",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"moderate",
								"course",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Частичное обновление курса в статусе \"need_updates\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Permission test for organisator\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" \r",
									"pm.test(\"Permission test for content-manager\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('content_manager_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for content-manager failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for tester\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('tester_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for tester failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"required\": [\r",
									"        \"course_id\",\r",
									"        \"updated_fields\"\r",
									"    ],\r",
									"    \"additionalProperties\": false,\r",
									"    \"properties\": {\r",
									"        \"course_id\": {\r",
									"            \"type\": \"string\",\r",
									"            },\r",
									"        \"updated_fields\": {\r",
									"            \"type\": \"string\",\r",
									"            }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Schema is valid\", () => {\r",
									"    pm.expect(ajv.validate(schema, jsonData)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500 ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{organisator_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Postman_test\",\r\n    \"academic\": {\r\n        \"hours\": 1,\r\n        \"month\": 1\r\n    },\r\n    \"model_id\": \"{{model_sphere_id}}\",\r\n    \"testing\": [\r\n        {\r\n            \"_id\": \"{{competency_id}}\",\r\n            \"level\": \"normal_level\"\r\n        }\r\n    ],\r\n    \"stages\": [\r\n        {\r\n            \"order\": 1,\r\n            \"start_date\": \"{{today}}\",\r\n            \"end_date\": \"{{tomorrow}}\",\r\n            \"is_procto\": false,\r\n            \"timezone\": 3\r\n        }\r\n    ],\r\n    \"stage\": \"moderate\",\r\n    \"author_id\": \"{{organisator_id}}\",\r\n    \"organization_id\": \"{{organisation_id}}\"\r\n}"
						},
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/course/{{course_id}}/moderate",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"course",
								"{{course_id}}",
								"moderate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Публикация курса по компетенциям на модерации",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Permission test for organisator\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" \r",
									"pm.test(\"Permission test for content-manager\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('content_manager_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for content-manager failed\").to.have.status(200);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for tester\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('tester_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for tester failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"required\": [\r",
									"        \"_id\",\r",
									"        \"academic\",\r",
									"        \"author_id\",\r",
									"        \"has_students\",\r",
									"        \"desc\",\r",
									"        \"title\",\r",
									"        \"stage\",\r",
									"        \"dictionary_id\",\r",
									"        \"is_it\",\r",
									"        \"model_id\",\r",
									"        \"stages\",\r",
									"        \"is_deleted\",\r",
									"        \"created_at\",\r",
									"        \"updated_at\",\r",
									"        \"organization_id\",\r",
									"        \"testing\",\r",
									"        \"files\",\r",
									"        \"organization\",\r",
									"        \"competencies\",\r",
									"        \"spheres\"\r",
									"    ],\r",
									"    \"additionalProperties\": false,\r",
									"    \"properties\": {\r",
									"        \"_id\": {\r",
									"            \"type\": \"string\",\r",
									"            },\r",
									"        \"academic\": {\r",
									"            \"type\": \"object\",\r",
									"        },\r",
									"        \"author_id\": {\r",
									"            \"type\": \"string\",\r",
									"        },\r",
									"        \"has_students\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"desc\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"title\":{\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"stage\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"dictionary_id\":{\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"is_it\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"model_id\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"stages\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"is_deleted\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"created_at\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"updated_at\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"organization_id\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"testing\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"files\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"organization\": {\r",
									"            \"type\": \"object\"\r",
									"        },\r",
									"        \"competencies\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"spheres\": {\r",
									"            \"type\": \"array\"\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Schema is valid\", () => {\r",
									"    pm.expect(ajv.validate(schema, jsonData)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500 ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{content_manager_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"course_id\": \"{{course_id}}\",\r\n  \"stage\": \"published\"\r\n}"
						},
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/moderate/course/update",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"moderate",
								"course",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Публикация курса по сферам на модерации",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Permission test for organisator\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" \r",
									"pm.test(\"Permission test for content-manager\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('content_manager_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for content-manager failed\").to.have.status(200);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for tester\", () => {\r",
									"    pm.request.headers.upsert({\r",
									"        'key': 'Authorization',\r",
									"        'value': `${pm.collectionVariables.get('tester_token')}`\r",
									"        });\r",
									"    pm.sendRequest(pm.request, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for tester failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"required\": [\r",
									"        \"_id\",\r",
									"        \"academic\",\r",
									"        \"author_id\",\r",
									"        \"has_students\",\r",
									"        \"desc\",\r",
									"        \"title\",\r",
									"        \"stage\",\r",
									"        \"dictionary_id\",\r",
									"        \"is_it\",\r",
									"        \"model_id\",\r",
									"        \"stages\",\r",
									"        \"is_deleted\",\r",
									"        \"created_at\",\r",
									"        \"updated_at\",\r",
									"        \"organization_id\",\r",
									"        \"testing\",\r",
									"        \"files\",\r",
									"        \"organization\",\r",
									"        \"competencies\",\r",
									"        \"spheres\"\r",
									"    ],\r",
									"    \"additionalProperties\": false,\r",
									"    \"properties\": {\r",
									"        \"_id\": {\r",
									"            \"type\": \"string\",\r",
									"            },\r",
									"        \"academic\": {\r",
									"            \"type\": \"object\",\r",
									"        },\r",
									"        \"author_id\": {\r",
									"            \"type\": \"string\",\r",
									"        },\r",
									"        \"has_students\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"desc\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"title\":{\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"stage\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"dictionary_id\":{\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"is_it\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"model_id\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"stages\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"is_deleted\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"created_at\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"updated_at\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"organization_id\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"testing\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"files\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"organization\": {\r",
									"            \"type\": \"object\"\r",
									"        },\r",
									"        \"competencies\": {\r",
									"            \"type\": \"array\"\r",
									"        },\r",
									"        \"spheres\": {\r",
									"            \"type\": \"array\"\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Schema is valid\", () => {\r",
									"    pm.expect(ajv.validate(schema, jsonData)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500 ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{content_manager_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"course_id\": \"{{course_id_sphere}}\",\r\n  \"stage\": \"published\"\r\n}"
						},
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/moderate/course/update",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"moderate",
								"course",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление курса",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Permission test for organisator\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" \r",
									"pm.test(\"Permission test for content-manager\", () => {\r",
									"    let thisRequest = {\r",
									"        url: `https://api-buildernext-assmnt.unionetest.ru/api/v3/course/${pm.collectionVariables.get('course_1_id')}`,\r",
									"        method: 'DELETE',\r",
									"        header: {\r",
									"        'accept': 'application/json',\r",
									"        'Authorization': `${pm.collectionVariables.get('content_manager_token')}`\r",
									"        }\r",
									"    };\r",
									"    pm.sendRequest(thisRequest, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for content-manager failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for tester\", () => {\r",
									"    let thisRequest = {\r",
									"        url: `https://api-buildernext-assmnt.unionetest.ru/api/v3/course/${pm.collectionVariables.get('course_2_id')}`,\r",
									"        method: 'DELETE',\r",
									"        header: {\r",
									"        'accept': 'application/json',\r",
									"        'Authorization': `${pm.collectionVariables.get('tester_token')}`\r",
									"        }\r",
									"    };\r",
									"    pm.sendRequest(thisRequest, (error, response) => {\r",
									"        pm.expect(response, \"Permission test for tester failed\").to.have.status(403);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200 ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "{{organisator_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/course/{{course_id}}",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"course",
								"{{course_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Дубль метода// Получение списка на модерации с фильтрацией Опубликованные",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authority",
								"value": "api-buildernext-assmnt.unionetest.ru"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
							},
							{
								"key": "authorization",
								"value": "a76454c583e04cc341544a11478b0bd5d5779680bdd2b6b960634c1f7c1599f7"
							},
							{
								"key": "origin",
								"value": "https://moderate-assessment.unionetest.ru"
							},
							{
								"key": "referer",
								"value": "https://moderate-assessment.unionetest.ru/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Chromium\";v=\"116\", \"Not)A;Brand\";v=\"24\", \"Google Chrome\";v=\"116\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36"
							}
						],
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/moderate/courses?organization=64e5e283cc9bdf9db3082b01&stages=published&limit=10&page=1",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"moderate",
								"courses"
							],
							"query": [
								{
									"key": "organization",
									"value": "64e5e283cc9bdf9db3082b01"
								},
								{
									"key": "stages",
									"value": "published"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "today",
			"value": ""
		},
		{
			"key": "tomorrow",
			"value": ""
		},
		{
			"key": "content_manager_id",
			"value": ""
		},
		{
			"key": "organisator_id",
			"value": ""
		},
		{
			"key": "tester_id",
			"value": ""
		},
		{
			"key": "organisation_id",
			"value": ""
		},
		{
			"key": "model_id",
			"value": ""
		},
		{
			"key": "model",
			"value": ""
		},
		{
			"key": "competency_block_id",
			"value": ""
		},
		{
			"key": "competency_block",
			"value": ""
		},
		{
			"key": "sphere_id",
			"value": ""
		},
		{
			"key": "competency_id",
			"value": ""
		},
		{
			"key": "course_id",
			"value": ""
		},
		{
			"key": "course_stage_id",
			"value": ""
		},
		{
			"key": "course_1_id",
			"value": ""
		},
		{
			"key": "course_2_id",
			"value": ""
		},
		{
			"key": "course_3_id",
			"value": ""
		},
		{
			"key": "course_5_id",
			"value": ""
		},
		{
			"key": "course_4_id",
			"value": ""
		},
		{
			"key": "course_6_id",
			"value": ""
		},
		{
			"key": "model_id_sphere",
			"value": ""
		},
		{
			"key": "model_sphere",
			"value": ""
		},
		{
			"key": "course_id_sphere",
			"value": ""
		},
		{
			"key": "course_stage_id_sphere",
			"value": ""
		}
	]
}