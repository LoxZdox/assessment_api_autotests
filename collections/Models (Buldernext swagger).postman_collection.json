{
	"info": {
		"_postman_id": "73bcca1d-cd4b-484f-afbe-297ef5898ff1",
		"name": "Models (Buldernext swagger)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29613235"
	},
	"item": [
		{
			"name": "Flow and getting neccessary variables",
			"item": [
				{
					"name": "Создание модели",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set('model_id', pm.response.json()._id);\r",
									"pm.collectionVariables.set('model', JSON.stringify(pm.response.json()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "api-models-assmnt.unionetest.ru"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
							},
							{
								"key": "authorization",
								"value": "{{content_manager_token}}"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "origin",
								"value": "https://models-assessment.unionetest.ru"
							},
							{
								"key": "referer",
								"value": "https://models-assessment.unionetest.ru/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Chromium\";v=\"112\", \"Google Chrome\";v=\"112\", \"Not:A-Brand\";v=\"99\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"stage\": \"draft\",\r\n    \"display_results\": \"competency_only\",\r\n    \"stages\": [\r\n        {\r\n            \"name\": \"Postman_test\",\r\n            \"color\": \"#E26C3C\",\r\n            \"order\": 1\r\n        }\r\n    ],\r\n    \"common_params\": {\r\n        \"name\": \"Postman_test\",\r\n        \"level\": \"normal_level\",\r\n        \"count_of_attempts\": 2,\r\n        \"registration_type\": \"link\",\r\n        \"max_count_of_testers\": 10000,\r\n        \"certificates\": false\r\n    },\r\n    \"fields_display\": {\r\n        \"show_it\": false,\r\n        \"show_docs\": false,\r\n        \"show_description\": false,\r\n        \"show_academic_hours\": true,\r\n        \"show_academic_months\": true,\r\n        \"show_branch_industry\": false\r\n    },\r\n    \"test_options\": {\r\n        \"weight_questions\": [\r\n            {\r\n                \"type\": \"one\",\r\n                \"tag\": \"competency_level\",\r\n                \"count\": 1,\r\n                \"weight\": 1,\r\n                \"is_enabled\": true,\r\n                \"time_for_question\": 10\r\n            }\r\n        ],\r\n        \"weight_levels\": [\r\n            {\r\n                \"level\": \"normal_level\",\r\n                \"weight\": 1\r\n            },\r\n            {\r\n                \"level\": \"advanced_level\",\r\n                \"weight\": 2\r\n            },\r\n            {\r\n                \"level\": \"expert_level\",\r\n                \"weight\": 3\r\n            }\r\n        ],\r\n        \"output\": \"by_one\",\r\n        \"test_type\": \"competency\"\r\n    },\r\n    \"levels\": [\r\n        {\r\n            \"type\": \"basic_level\",\r\n            \"from\": 0,\r\n            \"to\": 17\r\n        },\r\n        {\r\n            \"type\": \"normal_level\",\r\n            \"from\": 18,\r\n            \"to\": 100\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api-models-assmnt.unionetest.ru/api/models/v2",
							"protocol": "https",
							"host": [
								"api-models-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"models",
								"v2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Публикация модели",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authority",
								"value": "api-models-assmnt.unionetest.ru"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
							},
							{
								"key": "authorization",
								"value": "{{content_manager_token}}"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "origin",
								"value": "https://models-assessment.unionetest.ru"
							},
							{
								"key": "referer",
								"value": "https://models-assessment.unionetest.ru/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Chromium\";v=\"112\", \"Google Chrome\";v=\"112\", \"Not:A-Brand\";v=\"99\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{model}}"
						},
						"url": {
							"raw": "https://api-models-assmnt.unionetest.ru/api/models/publish-by-id?id={{model_id}}",
							"protocol": "https",
							"host": [
								"api-models-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"models",
								"publish-by-id"
							],
							"query": [
								{
									"key": "id",
									"value": "{{model_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Models",
			"item": [
				{
					"name": "Получение списка моделей",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Permission test for content\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for org\", function () {\r",
									"    pm.request.headers.upsert({\r",
									"        'key':'authorization',\r",
									"        'value':`${pm.collectionVariables.get('organisator_token')}`\r",
									"    })\r",
									"    pm.sendRequest(pm.request,(error,response)=>{\r",
									"        pm.expect(response, 'permission test failed').to.have.status(200); // здесь должен быть статус код 403 - не проходит, так как у юзерорга появился доступ к этому запросу\r",
									"    })\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for tester\"), function () {\r",
									"    pm.request.headers.upsert({\r",
									"         'key':'authorization',\r",
									"        'value':`${pm.collectionVariables.get('tester_token')}`\r",
									"    })\r",
									"    pm.sendRequest(pm.request,(error,response)=>{\r",
									"        pm.expect(response, 'permission test failed').to.have.status(403);\r",
									"    })\r",
									"}\r",
									"\r",
									"\r",
									"let jsondata = pm.response.json()\r",
									"let Ajv = require('ajv'), \r",
									"ajv = new Ajv({logger:console}),\r",
									"scheme={\r",
									"\t\"$id\": \"https://example.com/object1693304170.json\", \r",
									"\t\"type\": \"object\",\r",
									"\t\"required\": [\r",
									"\t\t\"items\"\r",
									"\t],\r",
									"\t\"properties\": {\r",
									"\t\t\"items\": {\r",
									"\t\t\t\"type\": \"array\",\r",
									"\t\t\t\"default\": [],\r",
									"\t\t\t\"items\":{\r",
									"\t\t\t\t\"type\": \"object\",\r",
									"\t\t\t\t\"required\": [\r",
									"\t\t\t\t\t\"_id\",\r",
									"\t\t\t\t\t\"name\"\r",
									"\t\t\t\t],\r",
									"\t\t\t\t\"properties\": {\r",
									"\t\t\t\t\t\"_id\": {\r",
									"\t\t\t\t\t\t\"type\": \"string\",\r",
									"\t\t\t\t\t\t\"default\": \"\",\r",
									"\t\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t\t\"64e3a9dd84e052070c53cbd1\"\r",
									"\t\t\t\t\t\t],\r",
									"\t\t\t\t\t\t\"pattern\": \"^.*$\"\r",
									"\t\t\t\t\t},\r",
									"\t\t\t\t\t\"name\": {\r",
									"\t\t\t\t\t\t\"$id\": \"#root/items/items/name\", \r",
									"\t\t\t\t\t\t\"title\": \"Name\", \r",
									"\t\t\t\t\t\t\"type\": \"string\",\r",
									"\t\t\t\t\t\t\"default\": \"\",\r",
									"\t\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t\t\"nikmod1\"\r",
									"\t\t\t\t\t\t]\r",
									"\t\t\t\t\t}\r",
									"\t\t\t\t}\r",
									"\t\t\t},\r",
									"\r",
									"            \"totalCount\": {\r",
									"      \"$id\": \"#root/totalCount\", \r",
									"      \"title\": \"Totalcount\", \r",
									"      \"type\": \"integer\",\r",
									"      \"examples\": [\r",
									"        167\r",
									"      ],\r",
									"      \"default\": 0\r",
									"            }\r",
									"\t\t}\r",
									"\t}\r",
									"}\r",
									"pm.test(\"scheme is valid\",()=>{\r",
									"    pm.expect(ajv.validate(scheme,jsondata)).to.be.true\r",
									"})\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "{{content_manager_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/models?stage=draft%2C%20published",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"models"
							],
							"query": [
								{
									"key": "stage",
									"value": "draft%2C%20published"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение модели по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Permission test for content\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for organisator\", function () {\r",
									"    pm.request.headers.upsert({\r",
									"        'key':'authorization',\r",
									"        'value':`${pm.collectionVariables.get('organisator_token')}`\r",
									"    })\r",
									"    pm.sendRequest(pm.request,(error,response)=>{\r",
									"        pm.expect(response, 'permission test for organisator failed').to.have.status(200);\r",
									"    })\r",
									"});\r",
									"\r",
									"pm.test(\"Permission test for tester\", function () {\r",
									"    pm.request.headers.upsert({\r",
									"         'key':'authorization',\r",
									"        'value':`${pm.collectionVariables.get('tester_token')}`\r",
									"    })\r",
									"    pm.sendRequest(pm.request,(error,response)=>{\r",
									"        pm.expect(response, 'permission test for tester failed').to.have.status(200);\r",
									"    })\r",
									"});\r",
									"\r",
									"let jsondata = pm.response.json()\r",
									"let Ajv = require('ajv'), \r",
									"ajv = new Ajv({logger:console}),\r",
									"scheme={\r",
									"\t\"$id\": \"https://example.com/object1693473255.json\", \r",
									"\t\"title\": \"Root\", \r",
									"\t\"type\": \"object\",\r",
									"\t\"required\": [\r",
									"\t\t\"id\",\r",
									"\t\t\"common_params\",\r",
									"\t\t\"fields_display\",\r",
									"\t\t\"levels\",\r",
									"\t\t\"test_options\",\r",
									"\t\t\"display_results\",\r",
									"\t\t\"stage\",\r",
									"\t\t\"stages\",\r",
									"\t\t\"created_at\",\r",
									"\t\t\"updated_at\"\r",
									"\t],\r",
									"\t\"properties\": {\r",
									"\t\t\"id\": {\r",
									"\t\t\t\"type\": \"string\",\r",
									"\t\t\t\"default\": \"\",\r",
									"\t\t\t\"examples\": [\r",
									"\t\t\t\t\"64f059861dbc553301aa8296\"\r",
									"\t\t\t],\r",
									"\t\t\t\"pattern\": \"^.*$\"\r",
									"\t\t},\r",
									"\t\t\"common_params\": {\r",
									"\t\t\t\"$id\": \"#root/common_params\", \r",
									"\t\t\t\"title\": \"Common_params\", \r",
									"\t\t\t\"type\": \"object\",\r",
									"\t\t\t\"required\": [\r",
									"\t\t\t\t\"name\",\r",
									"\t\t\t\t\"level\",\r",
									"\t\t\t\t\"count_of_stages\",\r",
									"\t\t\t\t\"count_of_attempts\",\r",
									"\t\t\t\t\"max_count_of_testers\",\r",
									"\t\t\t\t\"registration_type\",\r",
									"\t\t\t\t\"certificates\"\r",
									"\t\t\t],\r",
									"\t\t\t\"properties\": {\r",
									"\t\t\t\t\"name\": {\r",
									"\t\t\t\t\t\"$id\": \"#root/common_params/name\", \r",
									"\t\t\t\t\t\"title\": \"Name\", \r",
									"\t\t\t\t\t\"type\": \"string\",\r",
									"\t\t\t\t\t\"default\": \"\",\r",
									"\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t\"Postman_test\"\r",
									"\t\t\t\t\t],\r",
									"\t\t\t\t\t\"pattern\": \"^.*$\"\r",
									"\t\t\t\t},\r",
									"\t\t\t\t\"level\": {\r",
									"\t\t\t\t\t\"$id\": \"#root/common_params/level\", \r",
									"\t\t\t\t\t\"title\": \"Level\", \r",
									"\t\t\t\t\t\"type\": \"string\",\r",
									"\t\t\t\t\t\"default\": \"\",\r",
									"\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t\"normal_level\"\r",
									"\t\t\t\t\t],\r",
									"\t\t\t\t\t\"pattern\": \"^.*$\"\r",
									"\t\t\t\t},\r",
									"\t\t\t\t\"count_of_stages\": {\r",
									"\t\t\t\t\t\"$id\": \"#root/common_params/count_of_stages\", \r",
									"\t\t\t\t\t\"title\": \"Count_of_stages\", \r",
									"\t\t\t\t\t\"type\": \"integer\",\r",
									"\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t0\r",
									"\t\t\t\t\t],\r",
									"\t\t\t\t\t\"default\": 0\r",
									"\t\t\t\t},\r",
									"\t\t\t\t\"count_of_attempts\": {\r",
									"\t\t\t\t\t\"$id\": \"#root/common_params/count_of_attempts\", \r",
									"\t\t\t\t\t\"title\": \"Count_of_attempts\", \r",
									"\t\t\t\t\t\"type\": \"integer\",\r",
									"\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t2\r",
									"\t\t\t\t\t],\r",
									"\t\t\t\t\t\"default\": 0\r",
									"\t\t\t\t},\r",
									"\t\t\t\t\"max_count_of_testers\": {\r",
									"\t\t\t\t\t\"$id\": \"#root/common_params/max_count_of_testers\", \r",
									"\t\t\t\t\t\"title\": \"Max_count_of_testers\", \r",
									"\t\t\t\t\t\"type\": \"integer\",\r",
									"\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t10000\r",
									"\t\t\t\t\t],\r",
									"\t\t\t\t\t\"default\": 0\r",
									"\t\t\t\t},\r",
									"\t\t\t\t\"registration_type\": {\r",
									"\t\t\t\t\t\"$id\": \"#root/common_params/registration_type\", \r",
									"\t\t\t\t\t\"title\": \"Registration_type\", \r",
									"\t\t\t\t\t\"type\": \"string\",\r",
									"\t\t\t\t\t\"default\": \"\",\r",
									"\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t\"link\"\r",
									"\t\t\t\t\t],\r",
									"\t\t\t\t\t\"pattern\": \"^.*$\"\r",
									"\t\t\t\t},\r",
									"\t\t\t\t\"certificates\": {\r",
									"\t\t\t\t\t\"$id\": \"#root/common_params/certificates\", \r",
									"\t\t\t\t\t\"title\": \"Certificates\", \r",
									"\t\t\t\t\t\"type\": \"boolean\",\r",
									"\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\tfalse\r",
									"\t\t\t\t\t],\r",
									"\t\t\t\t\t\"default\": true\r",
									"\t\t\t\t}\r",
									"\t\t\t}\r",
									"\t\t}\r",
									",\r",
									"\t\t\"fields_display\": {\r",
									"\t\t\t\"$id\": \"#root/fields_display\", \r",
									"\t\t\t\"title\": \"Fields_display\", \r",
									"\t\t\t\"type\": \"object\",\r",
									"\t\t\t\"required\": [\r",
									"\t\t\t\t\"show_academic_hours\",\r",
									"\t\t\t\t\"show_academic_months\",\r",
									"\t\t\t\t\"show_description\",\r",
									"\t\t\t\t\"show_branch_industry\",\r",
									"\t\t\t\t\"show_it\",\r",
									"\t\t\t\t\"show_docs\"\r",
									"\t\t\t],\r",
									"\t\t\t\"properties\": {\r",
									"\t\t\t\t\"show_academic_hours\": {\r",
									"\t\t\t\t\t\"$id\": \"#root/fields_display/show_academic_hours\", \r",
									"\t\t\t\t\t\"title\": \"Show_academic_hours\", \r",
									"\t\t\t\t\t\"type\": \"boolean\",\r",
									"\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\ttrue\r",
									"\t\t\t\t\t],\r",
									"\t\t\t\t\t\"default\": true\r",
									"\t\t\t\t},\r",
									"\t\t\t\t\"show_academic_months\": {\r",
									"\t\t\t\t\t\"$id\": \"#root/fields_display/show_academic_months\", \r",
									"\t\t\t\t\t\"title\": \"Show_academic_months\", \r",
									"\t\t\t\t\t\"type\": \"boolean\",\r",
									"\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\ttrue\r",
									"\t\t\t\t\t],\r",
									"\t\t\t\t\t\"default\": true\r",
									"\t\t\t\t},\r",
									"\t\t\t\t\"show_description\": {\r",
									"\t\t\t\t\t\"$id\": \"#root/fields_display/show_description\", \r",
									"\t\t\t\t\t\"title\": \"Show_description\", \r",
									"\t\t\t\t\t\"type\": \"boolean\",\r",
									"\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\tfalse\r",
									"\t\t\t\t\t],\r",
									"\t\t\t\t\t\"default\": true\r",
									"\t\t\t\t},\r",
									"\t\t\t\t\"show_branch_industry\": {\r",
									"\t\t\t\t\t\"$id\": \"#root/fields_display/show_branch_industry\", \r",
									"\t\t\t\t\t\"title\": \"Show_branch_industry\", \r",
									"\t\t\t\t\t\"type\": \"boolean\",\r",
									"\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\tfalse\r",
									"\t\t\t\t\t],\r",
									"\t\t\t\t\t\"default\": true\r",
									"\t\t\t\t},\r",
									"\t\t\t\t\"show_it\": {\r",
									"\t\t\t\t\t\"$id\": \"#root/fields_display/show_it\", \r",
									"\t\t\t\t\t\"title\": \"Show_it\", \r",
									"\t\t\t\t\t\"type\": \"boolean\",\r",
									"\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\tfalse\r",
									"\t\t\t\t\t],\r",
									"\t\t\t\t\t\"default\": true\r",
									"\t\t\t\t},\r",
									"\t\t\t\t\"show_docs\": {\r",
									"\t\t\t\t\t\"$id\": \"#root/fields_display/show_docs\", \r",
									"\t\t\t\t\t\"title\": \"Show_docs\", \r",
									"\t\t\t\t\t\"type\": \"boolean\",\r",
									"\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\tfalse\r",
									"\t\t\t\t\t],\r",
									"\t\t\t\t\t\"default\": true\r",
									"\t\t\t\t}\r",
									"\t\t\t}\r",
									"\t\t}\r",
									",\r",
									"\t\t\"levels\": {\r",
									"\t\t\t\"$id\": \"#root/levels\", \r",
									"\t\t\t\"title\": \"Levels\", \r",
									"\t\t\t\"type\": \"array\",\r",
									"\t\t\t\"default\": [],\r",
									"\t\t\t\"items\":{\r",
									"\t\t\t\t\"$id\": \"#root/levels/items\", \r",
									"\t\t\t\t\"title\": \"Items\", \r",
									"\t\t\t\t\"type\": \"object\",\r",
									"\t\t\t\t\"required\": [\r",
									"\t\t\t\t\t\"type\",\r",
									"\t\t\t\t\t\"from\",\r",
									"\t\t\t\t\t\"to\"\r",
									"\t\t\t\t],\r",
									"\t\t\t\t\"properties\": {\r",
									"\t\t\t\t\t\"type\": {\r",
									"\t\t\t\t\t\t\"$id\": \"#root/levels/items/type\", \r",
									"\t\t\t\t\t\t\"title\": \"Type\", \r",
									"\t\t\t\t\t\t\"type\": \"string\",\r",
									"\t\t\t\t\t\t\"default\": \"\",\r",
									"\t\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t\t\"basic_level\"\r",
									"\t\t\t\t\t\t],\r",
									"\t\t\t\t\t\t\"pattern\": \"^.*$\"\r",
									"\t\t\t\t\t},\r",
									"\t\t\t\t\t\"from\": {\r",
									"\t\t\t\t\t\t\"$id\": \"#root/levels/items/from\", \r",
									"\t\t\t\t\t\t\"title\": \"From\", \r",
									"\t\t\t\t\t\t\"type\": \"integer\",\r",
									"\t\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t\t0\r",
									"\t\t\t\t\t\t],\r",
									"\t\t\t\t\t\t\"default\": 0\r",
									"\t\t\t\t\t},\r",
									"\t\t\t\t\t\"to\": {\r",
									"\t\t\t\t\t\t\"$id\": \"#root/levels/items/to\", \r",
									"\t\t\t\t\t\t\"title\": \"To\", \r",
									"\t\t\t\t\t\t\"type\": \"integer\",\r",
									"\t\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t\t17\r",
									"\t\t\t\t\t\t],\r",
									"\t\t\t\t\t\t\"default\": 0\r",
									"\t\t\t\t\t}\r",
									"\t\t\t\t}\r",
									"\t\t\t}\r",
									"\r",
									"\t\t},\r",
									"\t\t\"test_options\": {\r",
									"\t\t\t\"$id\": \"#root/test_options\", \r",
									"\t\t\t\"title\": \"Test_options\", \r",
									"\t\t\t\"type\": \"object\",\r",
									"\t\t\t\"required\": [\r",
									"\t\t\t\t\"test_type\",\r",
									"\t\t\t\t\"output\",\r",
									"\t\t\t\t\"weight_questions\",\r",
									"\t\t\t\t\"weight_levels\"\r",
									"\t\t\t],\r",
									"\t\t\t\"properties\": {\r",
									"\t\t\t\t\"test_type\": {\r",
									"\t\t\t\t\t\"$id\": \"#root/test_options/test_type\", \r",
									"\t\t\t\t\t\"title\": \"Test_type\", \r",
									"\t\t\t\t\t\"type\": \"string\",\r",
									"\t\t\t\t\t\"default\": \"\",\r",
									"\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t\"competency\"\r",
									"\t\t\t\t\t],\r",
									"\t\t\t\t\t\"pattern\": \"^.*$\"\r",
									"\t\t\t\t},\r",
									"\t\t\t\t\"output\": {\r",
									"\t\t\t\t\t\"$id\": \"#root/test_options/output\", \r",
									"\t\t\t\t\t\"title\": \"Output\", \r",
									"\t\t\t\t\t\"type\": \"string\",\r",
									"\t\t\t\t\t\"default\": \"\",\r",
									"\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t\"by_one\"\r",
									"\t\t\t\t\t],\r",
									"\t\t\t\t\t\"pattern\": \"^.*$\"\r",
									"\t\t\t\t},\r",
									"\t\t\t\t\"weight_questions\": {\r",
									"\t\t\t\t\t\"$id\": \"#root/test_options/weight_questions\", \r",
									"\t\t\t\t\t\"title\": \"Weight_questions\", \r",
									"\t\t\t\t\t\"type\": \"array\",\r",
									"\t\t\t\t\t\"default\": [],\r",
									"\t\t\t\t\t\"items\":{\r",
									"\t\t\t\t\t\t\"$id\": \"#root/test_options/weight_questions/items\", \r",
									"\t\t\t\t\t\t\"title\": \"Items\", \r",
									"\t\t\t\t\t\t\"type\": \"object\",\r",
									"\t\t\t\t\t\t\"required\": [\r",
									"\t\t\t\t\t\t\t\"type\",\r",
									"\t\t\t\t\t\t\t\"tag\",\r",
									"\t\t\t\t\t\t\t\"count\",\r",
									"\t\t\t\t\t\t\t\"weight\",\r",
									"\t\t\t\t\t\t\t\"time_for_question\",\r",
									"\t\t\t\t\t\t\t\"is_enabled\"\r",
									"\t\t\t\t\t\t],\r",
									"\t\t\t\t\t\t\"properties\": {\r",
									"\t\t\t\t\t\t\t\"type\": {\r",
									"\t\t\t\t\t\t\t\t\"$id\": \"#root/test_options/weight_questions/items/type\", \r",
									"\t\t\t\t\t\t\t\t\"title\": \"Type\", \r",
									"\t\t\t\t\t\t\t\t\"type\": \"string\",\r",
									"\t\t\t\t\t\t\t\t\"default\": \"\",\r",
									"\t\t\t\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t\t\t\t\"one\"\r",
									"\t\t\t\t\t\t\t\t],\r",
									"\t\t\t\t\t\t\t\t\"pattern\": \"^.*$\"\r",
									"\t\t\t\t\t\t\t},\r",
									"\t\t\t\t\t\t\t\"tag\": {\r",
									"\t\t\t\t\t\t\t\t\"$id\": \"#root/test_options/weight_questions/items/tag\", \r",
									"\t\t\t\t\t\t\t\t\"title\": \"Tag\", \r",
									"\t\t\t\t\t\t\t\t\"type\": \"string\",\r",
									"\t\t\t\t\t\t\t\t\"default\": \"\",\r",
									"\t\t\t\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t\t\t\t\"competency_level\"\r",
									"\t\t\t\t\t\t\t\t],\r",
									"\t\t\t\t\t\t\t\t\"pattern\": \"^.*$\"\r",
									"\t\t\t\t\t\t\t},\r",
									"\t\t\t\t\t\t\t\"count\": {\r",
									"\t\t\t\t\t\t\t\t\"$id\": \"#root/test_options/weight_questions/items/count\", \r",
									"\t\t\t\t\t\t\t\t\"title\": \"Count\", \r",
									"\t\t\t\t\t\t\t\t\"type\": \"integer\",\r",
									"\t\t\t\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t\t\t\t1\r",
									"\t\t\t\t\t\t\t\t],\r",
									"\t\t\t\t\t\t\t\t\"default\": 0\r",
									"\t\t\t\t\t\t\t},\r",
									"\t\t\t\t\t\t\t\"weight\": {\r",
									"\t\t\t\t\t\t\t\t\"$id\": \"#root/test_options/weight_questions/items/weight\", \r",
									"\t\t\t\t\t\t\t\t\"title\": \"Weight\", \r",
									"\t\t\t\t\t\t\t\t\"type\": \"integer\",\r",
									"\t\t\t\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t\t\t\t1\r",
									"\t\t\t\t\t\t\t\t],\r",
									"\t\t\t\t\t\t\t\t\"default\": 0\r",
									"\t\t\t\t\t\t\t},\r",
									"\t\t\t\t\t\t\t\"time_for_question\": {\r",
									"\t\t\t\t\t\t\t\t\"$id\": \"#root/test_options/weight_questions/items/time_for_question\", \r",
									"\t\t\t\t\t\t\t\t\"title\": \"Time_for_question\", \r",
									"\t\t\t\t\t\t\t\t\"type\": \"integer\",\r",
									"\t\t\t\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t\t\t\t10\r",
									"\t\t\t\t\t\t\t\t],\r",
									"\t\t\t\t\t\t\t\t\"default\": 0\r",
									"\t\t\t\t\t\t\t},\r",
									"\t\t\t\t\t\t\t\"is_enabled\": {\r",
									"\t\t\t\t\t\t\t\t\"$id\": \"#root/test_options/weight_questions/items/is_enabled\", \r",
									"\t\t\t\t\t\t\t\t\"title\": \"Is_enabled\", \r",
									"\t\t\t\t\t\t\t\t\"type\": \"boolean\",\r",
									"\t\t\t\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t\t\t\ttrue\r",
									"\t\t\t\t\t\t\t\t],\r",
									"\t\t\t\t\t\t\t\t\"default\": true\r",
									"\t\t\t\t\t\t\t}\r",
									"\t\t\t\t\t\t}\r",
									"\t\t\t\t\t}\r",
									"\r",
									"\t\t\t\t},\r",
									"\t\t\t\t\"weight_levels\": {\r",
									"\t\t\t\t\t\"$id\": \"#root/test_options/weight_levels\", \r",
									"\t\t\t\t\t\"title\": \"Weight_levels\", \r",
									"\t\t\t\t\t\"type\": \"array\",\r",
									"\t\t\t\t\t\"default\": [],\r",
									"\t\t\t\t\t\"items\":{\r",
									"\t\t\t\t\t\t\"$id\": \"#root/test_options/weight_levels/items\", \r",
									"\t\t\t\t\t\t\"title\": \"Items\", \r",
									"\t\t\t\t\t\t\"type\": \"object\",\r",
									"\t\t\t\t\t\t\"required\": [\r",
									"\t\t\t\t\t\t\t\"level\",\r",
									"\t\t\t\t\t\t\t\"weight\"\r",
									"\t\t\t\t\t\t],\r",
									"\t\t\t\t\t\t\"properties\": {\r",
									"\t\t\t\t\t\t\t\"level\": {\r",
									"\t\t\t\t\t\t\t\t\"$id\": \"#root/test_options/weight_levels/items/level\", \r",
									"\t\t\t\t\t\t\t\t\"title\": \"Level\", \r",
									"\t\t\t\t\t\t\t\t\"type\": \"string\",\r",
									"\t\t\t\t\t\t\t\t\"default\": \"\",\r",
									"\t\t\t\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t\t\t\t\"normal_level\"\r",
									"\t\t\t\t\t\t\t\t],\r",
									"\t\t\t\t\t\t\t\t\"pattern\": \"^.*$\"\r",
									"\t\t\t\t\t\t\t},\r",
									"\t\t\t\t\t\t\t\"weight\": {\r",
									"\t\t\t\t\t\t\t\t\"$id\": \"#root/test_options/weight_levels/items/weight\", \r",
									"\t\t\t\t\t\t\t\t\"title\": \"Weight\", \r",
									"\t\t\t\t\t\t\t\t\"type\": \"integer\",\r",
									"\t\t\t\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t\t\t\t1\r",
									"\t\t\t\t\t\t\t\t],\r",
									"\t\t\t\t\t\t\t\t\"default\": 0\r",
									"\t\t\t\t\t\t\t}\r",
									"\t\t\t\t\t\t}\r",
									"\t\t\t\t\t}\r",
									"\r",
									"\t\t\t\t}\r",
									"\t\t\t}\r",
									"\t\t}\r",
									",\r",
									"\t\t\"display_results\": {\r",
									"\t\t\t\"type\": \"string\",\r",
									"\t\t\t\"default\": \"\",\r",
									"\t\t\t\"examples\": [\r",
									"\t\t\t\t\"competency_only\"\r",
									"\t\t\t],\r",
									"\t\t\t\"pattern\": \"^.*$\"\r",
									"\t\t},\r",
									"\t\t\"stage\": {\r",
									"\t\t\t\"type\": \"string\",\r",
									"\t\t\t\"default\": \"published\",\r",
									"\t\t\t\"examples\": [\r",
									"\t\t\t\t\"published\"\r",
									"\t\t\t],\r",
									"\t\t\t\"pattern\": \"^.*$\"\r",
									"\t\t},\r",
									"\t\t\"stages\": {\r",
									"\t\t\t\"type\": \"array\",\r",
									"\t\t\t\"default\": [],\r",
									"\t\t\t\"items\":{\r",
									"\t\t\t\t\"$id\": \"#root/stages/items\", \r",
									"\t\t\t\t\"title\": \"Items\", \r",
									"\t\t\t\t\"type\": \"object\",\r",
									"\t\t\t\t\"required\": [\r",
									"\t\t\t\t\t\"color\",\r",
									"\t\t\t\t\t\"name\",\r",
									"\t\t\t\t\t\"order\"\r",
									"\t\t\t\t],\r",
									"\t\t\t\t\"properties\": {\r",
									"\t\t\t\t\t\"color\": {\r",
									"\t\t\t\t\t\t\"$id\": \"#root/stages/items/color\", \r",
									"\t\t\t\t\t\t\"title\": \"Color\", \r",
									"\t\t\t\t\t\t\"type\": \"string\",\r",
									"\t\t\t\t\t\t\"default\": \"\",\r",
									"\t\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t\t\"#E26C3C\"\r",
									"\t\t\t\t\t\t],\r",
									"\t\t\t\t\t\t\"pattern\": \"^.*$\"\r",
									"\t\t\t\t\t},\r",
									"\t\t\t\t\t\"name\": {\r",
									"\t\t\t\t\t\t\"$id\": \"#root/stages/items/name\", \r",
									"\t\t\t\t\t\t\"title\": \"Name\", \r",
									"\t\t\t\t\t\t\"type\": \"string\",\r",
									"\t\t\t\t\t\t\"default\": \"\",\r",
									"\t\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t\t\"Postman_test\"\r",
									"\t\t\t\t\t\t],\r",
									"\t\t\t\t\t\t\"pattern\": \"^.*$\"\r",
									"\t\t\t\t\t},\r",
									"\t\t\t\t\t\"order\": {\r",
									"\t\t\t\t\t\t\"$id\": \"#root/stages/items/order\", \r",
									"\t\t\t\t\t\t\"title\": \"Order\", \r",
									"\t\t\t\t\t\t\"type\": \"integer\",\r",
									"\t\t\t\t\t\t\"examples\": [\r",
									"\t\t\t\t\t\t\t1\r",
									"\t\t\t\t\t\t],\r",
									"\t\t\t\t\t\t\"default\": 0\r",
									"\t\t\t\t\t}\r",
									"\t\t\t\t}\r",
									"\t\t\t}\r",
									"\r",
									"\t\t},\r",
									"\t\t\"created_at\": {\r",
									"\t\t\t\"$id\": \"#root/created_at\", \r",
									"\t\t\t\"title\": \"Created_at\", \r",
									"\t\t\t\"type\": \"string\",\r",
									"\t\t\t\"default\": \"\",\r",
									"\t\t\t\"examples\": [\r",
									"\t\t\t\t\"2023-08-31T09:12:38.527Z\"\r",
									"\t\t\t],\r",
									"\t\t\t\"pattern\": \"^.*$\"\r",
									"\t\t},\r",
									"\t\t\"updated_at\": {\r",
									"\t\t\t\"$id\": \"#root/updated_at\", \r",
									"\t\t\t\"title\": \"Updated_at\", \r",
									"\t\t\t\"type\": \"string\",\r",
									"\t\t\t\"default\": \"\",\r",
									"\t\t\t\"examples\": [\r",
									"\t\t\t\t\"2023-08-31T09:12:38.523Z\"\r",
									"\t\t\t],\r",
									"\t\t\t\"pattern\": \"^.*$\"\r",
									"\t\t    }\r",
									"        }\r",
									"    }\r",
									"pm.test(\"scheme is valid\",()=>{\r",
									"    pm.expect(ajv.validate(scheme,jsondata)).to.be.true\r",
									"})\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"published\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{content_manager_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api-buildernext-assmnt.unionetest.ru/api/v3/model/{{model_id}}",
							"protocol": "https",
							"host": [
								"api-buildernext-assmnt",
								"unionetest",
								"ru"
							],
							"path": [
								"api",
								"v3",
								"model",
								"{{model_id}}"
							],
							"query": [
								{
									"key": "stage",
									"value": "Published",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "model_id",
			"value": ""
		},
		{
			"key": "model",
			"value": ""
		}
	]
}